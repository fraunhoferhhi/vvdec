stages:
   - build

variables:
    FULL_BUILD:
       value: "0"
       description: "Enable full build with various cpompilers."
    REBUILD_DOCKER_IMAGE:
       value: "0"
       description: "rebuild and publish docker image with latest emscripten"

.build_only_template:
   stage: build
   interruptible: true
   script:
      - make disable-lto=1 all
   rules:
      - if: '$CI_PIPELINE_SOURCE == "web"'
      - if: '$CI_PIPELINE_SOURCE == "schedule"'
      - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      - if: '$CI_COMMIT_BRANCH == "master"'

.build_only_template_full:
   extends: .build_only_template
   rules:
      - if: '$FULL_BUILD == "1"'
      - if: '$CI_COMMIT_BRANCH == "master"'

.build_test_template:
   stage: build
   interruptible: true
   cache:
      paths:
         - ext/
      key:
        files:
          - cmake/modules/define_bitstream_files.cmake
   variables:
     CTEST_OUTPUT_ON_FAILURE: 1
     CTEST_PARALLEL_LEVEL: 2
   script:
      - make enable-bitstream-download=1 enable-local-bitstream-download=1 disable-lto=1 all
      - make test
   rules:
      - if: '$CI_PIPELINE_SOURCE == "web"'
      - if: '$CI_PIPELINE_SOURCE == "schedule"'
      - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      - if: '$CI_COMMIT_BRANCH == "master"'

.build_test_macos_template:
   extends: .build_test_template
   script:
      - make osx-arch=${OSX_ARCH} enable-bitstream-download=1 enable-local-bitstream-download=1 disable-lto=1 all
      - make osx-arch=${OSX_ARCH} test

.build_test_msvc_template:
   extends: .build_test_template
   script:
      - make msvc-arch=${MSVC_ARCH} enable-bitstream-download=1 enable-local-bitstream-download=1 disable-lto=1 all
      - make msvc-arch=${MSVC_ARCH} test


build_gcc5_ubuntu1804:
   extends: .build_only_template_full
   variables:
     CC: gcc-5
     CXX: g++-5
   tags:
      - ubuntu1804

build_gcc6_ubuntu1804:
   extends: .build_only_template_full
   variables:
     CC: gcc-6
     CXX: g++-6
   tags:
      - ubuntu1804

build_gcc7_ubuntu2004:
   extends: .build_only_template_full
   variables:
     CC: gcc-7
     CXX: g++-7
   tags:
      - ubuntu2004

build_gcc8_ubuntu2004:
   extends: .build_only_template_full
   variables:
     CC: gcc-8
     CXX: g++-8
   tags:
      - ubuntu2004

build_gcc9_ubuntu2004:
   extends: .build_only_template_full
   variables:
     CC: gcc-9
     CXX: g++-9
   tags:
      - ubuntu2004

build_gcc10_ubuntu2004:
   extends: .build_only_template
   variables:
     CC: gcc-10
     CXX: g++-10
   tags:
      - ubuntu2004

build_clang7_ubuntu2004:
   extends: .build_only_template_full
   variables:
     CC: clang-7
     CXX: clang++-7
   tags:
      - ubuntu2004

build_clang8_ubuntu2004:
   extends: .build_only_template_full
   variables:
     CC: clang-8
     CXX: clang++-8
   tags:
      - ubuntu2004

build_clang9_ubuntu2004:
   extends: .build_only_template_full
   variables:
     CC: clang-9
     CXX: clang++-9
   tags:
      - ubuntu2004

build_clang10_ubuntu2004:
   extends: .build_only_template_full
   variables:
     CC: clang-10
     CXX: clang++-10
   tags:
      - ubuntu2004

build_mingw_ubuntu2004:
   extends: .build_only_template_full
   variables:
     toolchainfile: cmake/toolchains/x86_64-w64-mingw32-gcc-posix-ubuntu2004.cmake
   tags:
      - ubuntu2004


test_ubuntu1804:
   extends: .build_test_template
   tags:
      - ubuntu1804

test_ubuntu2004:
   extends: .build_test_template
   tags:
      - ubuntu2004

test_vc191x:
   extends: .build_test_msvc_template
   variables:
     MSVC_ARCH: x64
   tags:
      - vc191x

test_vc192x:
   extends: .build_test_msvc_template
   variables:
     MSVC_ARCH: x64
   tags:
      - vc192x

test_vc192x_Win32:
   extends: .build_test_msvc_template
   variables:
     MSVC_ARCH: Win32
   tags:
      - vc192x

test_macos_arm64:
   extends: .build_test_macos_template
   variables:
     OSX_ARCH: arm64
   tags:
      - macos-arm

test_macos_x86_64:
   extends: .build_test_macos_template
   variables:
     OSX_ARCH: x86_64
   tags:
      - macos


rebuild_emscripten_docker_image:
   extends: .build_only_template
   script:
      - echo -n $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
      - mkdir -p empty_context
      - if [[ $REBUILD_DOCKER_IMAGE = 1 ]] ; then NO_CACHE_ARG=--no-cache=true ; fi
      - docker build -t $CI_REGISTRY_IMAGE/emscripten-hhi:latest $NO_CACHE_ARG -f .emscripten.dockerfile empty_context
      - docker push $CI_REGISTRY_IMAGE/emscripten-hhi:latest
   tags:
      - docker-build

build_wasm:
   extends: .build_only_template
   image: $CI_REGISTRY_IMAGE/emscripten-hhi:latest
   script:
     - source /opt/emsdk/emsdk_env.sh
     - emcmake cmake -GNinja -B build/wasm -DVVDEC_ENABLE_X86_SIMD=TRUE
     - cmake --build build/wasm
     - cmake --build build/wasm -t install
   needs:
     - job: rebuild_emscripten_docker_image
       optional: true
   tags:
     - docker
